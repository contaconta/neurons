In searching for some inspiration ...


This is a compilation of the programs that I have created during the first two years of my phd. They were scattered arround my HD and difficult to use. Too many dependencies and not a clear and coherent structure.

The goal of the phd is to automatically segment the neurons present in huge stacks of brightfield images. It is not a piece of cake. The elements that I have are:

- Cube   - a 3D image containing the pixels. Filetype nfo for the cube, vl for the raw data
- Neuron - a vectorial representation of the neuron. It should be as similar as possible to a manually creted neuron. Filename: asc
- Point  - Filaname .pt
- Cloud  - a set of points defined in the space. Filename: cl
- Image  - an extension of cv image done for mapping float values into the HD
- Graph  - Filename: gr

I have started to do all this from scratch. It was stupid, but made me realize and think of all the problems of software development and of the conceptualization of the problem.

Now there will be bindings to other libraries, such as Torch for machine learning, ITK for filtering in the images, Matlab for the plot of vectors and so on.

There is a special emphasis on making the software easy to use, fast and comprehensible.

The contents of the directory are:
bin      - programs compiled
cmake	 - CMake file to generate a makefile automatically. All the modules are included in the Modules directory. You can copy those files to /usr/share/cmake-2.x/Modules/ (replace 2.x by your version number) but this is not necessary.
core     - the library source code
lib      - the library
objects  - place to store intermediate objects compiled
tools    - program to deal with the cube and neuron structure
viewer   - we need to see reality, don't?
scratch  - research code
Makefile - will compile the library, the viewer and the tools. The research code
           is compiled appart due to its innestability
tests    - small programs compiled to test the functionality of the library
